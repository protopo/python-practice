# Задача: Класс "Вектор"
# Создайте класс Vector для работы с векторами в пространстве.
# 
# Требования к классу:
# 
# Реализуйте магический метод __init__, который принимает координаты вектора (в трехмерном пространстве).
# Реализуйте магический метод __str__, чтобы выводить вектор в формате (x, y, z), где x, y, z — это координаты вектора.
# Перегрузите операцию сложения векторов с помощью метода __add__.
# Перегрузите операцию вычитания векторов с помощью метода __sub__.
# Реализуйте скалярное произведение векторов с помощью метода __mul__.
# Реализуйте операцию нахождения длины вектора с помощью метода __abs__ (используйте формулу Евклидовой длины вектора).
# Реализуйте метод сравнения векторов на равенство __eq__ (два вектора считаются равными, если их соответствующие координаты совпадают).

# Добавьте возможность умножения вектора на скаляр (с помощью метода __rmul__).
# Реализуйте векторное произведение для трёхмерных векторов (с помощью метода __matmul__).

from math import sqrt
class Vector:

    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z

    def __str__(self):
        #return (f'({self.x}, {self.y}, {self.z})')
        return '(%.d, %d, %d)' % (self.x, self.y, self.z)

    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y, self.z + other.z)

    def __sub__(self, other):
        return Vector(self.x - other.x, self.y - other.y, self.z - other.z)

    def __mul__(self, other):
        return (self.x * other.x + self.y * other.y + self.z * other.z)

    def __abs__(self):
        return (sqrt(self.x ** 2 + self.y ** 2 + self.z ** 2))

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y and self.z == other.z

    def __rmul__(self, r):
        return Vector(r * self.x, r * self.y, r * self.z)

    def __matmul__(self, other):
        return Vector(self.y * other.z - self.z * other.y,
                      self.z * other.x - self.x * other.z,
                      self.x * other.y - self.y * other.x)

vec1 = Vector(1, 2, 3) # Вектор (1, 2, 3)
vec2 = Vector(4, 5, 6) # Вектор (4, 5, 6)

print(vec1) # (1, 2, 3)
print(vec2) # (4, 5, 6)

print(vec1 + vec2) # (5, 7, 9)
print(vec1 - vec2) # (-3, -3, -3)

print(vec1 * vec2) # 32 (скалярное произведение: 1*4 + 2*5 + 3*6)
print(abs(vec1)) # 3.7416573867739413 (длина вектора)

print(vec1 == vec2) # False